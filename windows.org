#+AUTHOR: vab2048
#+TITLE: Emacs Windows Specific Notes and Configuration

This file contains notes and configurations for when Emacs is loaded on Windows.
- The file is only loaded if the OS is Windows.

* Intro

Output this to the *Messages* buffer for info.

#+BEGIN_SRC emacs-lisp
(message "Loading Windows Specific Configuration")
#+END_SRC

* Encoding

See:
- https://rufflewind.com/2014-07-20/pasting-unicode-in-emacs-on-windows

Originally I set ~(set-selection-coding-system 'utf-8)~ but on Windows it caused problems
copying unicode characters into the buffer. The correct value is 'utf-16-le because the
Windows API is built entirely on top of UTF-16.

#+BEGIN_SRC emacs-lisp
(set-selection-coding-system 'utf-16-le) ;
#+END_SRC
* HTTPS Errors on Windows

See resources:
- https://www.reddit.com/r/emacs/comments/4qup16/melpa_https_error_windows/


*Problem*
The issue is that when attemping to connect to a https resource on Windows (such as
https://melpa.org/packages/) you get an error:

#+BEGIN_EXAMPLE example output illustrating the error
Debugger entered--Lisp error: (error "Could not create connection to melpa.org:443")
  signal(error ("Could not create connection to melpa.org:443"))
...
#+END_EXAMPLE



*Solution*
Go to the ftp mirror for emacs (http://ftpmirror.gnu.org/emacs/) and download the dependencies
zip for the correct version of emacs. Unzip it in your emacs directory so that the dependencies
are present for Emacs.


*Explanation*
You need the GnuTLS DLL on Windows when using https. This is not included in the normal emacs
build for Windows so you need to download the dependencies and extract them over the emacs
directory on Windows where it is installed.

* TRAMP on Windows

See resources:
- http://stackoverflow.com/questions/1095172/emacs-tramp-plink
- http://stackoverflow.com/questions/43243449/how-do-i-change-the-command-sent-by-tramp-in-emacs-when-using-plink-on-windows

On Windows in order to use TRAMP to connect to a remote host (as if it were ssh) we require:
1. That putty is installed and the plink binary be in the PATH
2. The TRAMP default method is set to use plinkx
 - See https://www.gnu.org/software/tramp/ section on Inline Methods for more information.
3. A PuTTY session has been created and saved.

1. That putty is installed and the plink binary be in the PATH
#+BEGIN_SRC emacs-lisp
  ;; Use '\\' as path separator. Just do it - it works.
  ;; Do not use '\' or just '/' as it causes problems.
  (setenv "PATH" (concat "C:\\Program Files (x86)\\PuTTY\\;" (getenv "PATH")))
#+END_SRC

2. The TRAMP default method is set to use plinkx
#+BEGIN_SRC emacs-lisp
  (require 'tramp)

  ;; plink on its own always attempts to connect on port 22 (it requires only
  ;; the hostname) whereas plinkx allows you to reuse sessions. User names and port 
  ;; numbers must be defined in the session. We use plinkx so we can just connect to
  ;; defined PuTTY sessions.
  (setq tramp-default-method "plinkx")
  ; (setq tramp-default-user "")
  ; (setq tramp-default-host "")

  ;(setq tramp-chunksize "500")
#+END_SRC

3. A PuTTY session has been created and saved.
   - In the session you should at least define:
     - session/host name
     - session/port
     - connection/data/auto-login username
     - connection/ssh/auth/private key file for authentication
   - Optionally (if using a proxy) then also set:
     - connection/proxy/telnet command, or local proxy command

From there you can use the PuTTY defined session in TRAMP:

#+BEGIN_EXAMPLE example usage 
  C-x C-f /plink:<session-name-in-PuTTY>:/ RET
#+END_EXAMPLE

Unfortunately there is no autocomplete with these settings. Will try and find config to enable
it in the future.

** TRAMP auto-saving on Windows

N.B. there is a bug fix for this problem which will mean it is solved in future versions of
emacs. See: 
- http://lists.gnu.org/archive/html/emacs-devel/2017-01/msg00300.html

See
- https://github.com/syl20bnr/spacemacs/issues/7302
- http://lists.gnu.org/archive/html/tramp-devel/2017-01/msg00003.html

Emacs by default tries to auto save files after a while. When using TRAMP on Windows this
causes a problem (problem exists on Emacs 25.1, 25.2). When the auto save is triggered it
freezes emacs for a second with the error:

#+BEGIN_EXAMPLE example error output
Auto-saving ingest_report_hierarchy.scala: Opening output file: Invalid argument,
<path-to-file>
#+END_EXAMPLE

This is because the output file generated by TRAMP contains the ':' which is a forbidden
character on Windows. To workaround this we do the following:

#+BEGIN_SRC emacs-lisp

  ; Supposedly setting this variable explicitly fixes the problem.
  ; See: http://lists.gnu.org/archive/html/tramp-devel/2017-01/msg00004.html
  (setq tramp-auto-save-directory (concat "~/.emacs.d/backups/" "tramp/"))

  ;; Short term solution is to turn off auto-save in TRAMP buffers
  ;; until the bug is fixed upstream and I update to the later version.
  ; (add-to-list 'backup-directory-alist
  ;            (cons tramp-file-name-regexp nil))

 ; Alternatively just disable auto-save completely
 ; (setq auto-save-default nil) 

#+END_SRC



** Logging in as root

See
- http://stackoverflow.com/a/16408592/5108875

#+BEGIN_EXAMPLE Example of logging in as root on session defined as 'vagrant' in PuTTY
C-x C-f /plinkx:vagrant|sudo:root@vagrant:/etc/spark/conf/log4j.properties.template
#+END_EXAMPLE

** Archived: Changing invocation of plink

This is archived as it was found out that this is the actualy behaviour. By default the plink
method only uses the hostname. If you want to reuse a PuTTY session you should use plinkx
(which is what the config now does). The text below is kept as a guide on how to change the
plink method if need be.

See:
- http://stackoverflow.com/questions/43243449/how-do-i-change-the-command-sent-by-tramp-in-emacs-when-using-plink-on-windows

By default tramp invokes plink like so:

#+BEGIN_EXAMPLE example tramp invocation of plink vs plinkx
  Tramp: Sending command 'plink -ssh -t some_session " env 'TERM=dumb' 'PROMPT_COMMAND=' 'PS1=#$ ' /bin/sh " && exit || exit'
  Tramp: Sending command 'plink -load some_session -t " env 'TERM=dumb' 'PROMPT_COMMAND=' 'PS1=#$ ' /bin/sh " && exit || exit'
#+END_EXAMPLE

The problem is that with the ~-ssh~ flag, plink ignores the port specified in the session saved
in putty and tries to connect to port 22 (even if the session says it is using ssh and wants to
connect to a different port).

This is fine when you want to connect to port 22 but not ok for when you want to connect to
another port. So we need to change the way that plink is invoked by tramp to not have the
~-ssh~ flag. This does not matter in reality because the session saved in PuTTY will have
stated the connection type of ssh anyway.

#+BEGIN_SRC emacs-lisp
;; ;; Produces command issued by plink. Remove ("-ssh") to get rid of it "-ssh" in command
;; ;; generated by tramp.
;;   (eval-after-load "tramp"
;;   '(setf (cadr (assq 'tramp-login-args (cdr (assoc "plink" tramp-methods))))
;;          '(("-l" "%u") ("-P" "%p") ("-ssh") ("-t") ("%h") ("\"")
;;            ("env 'TERM=dumb' 'PROMPT_COMMAND=' 'PS1=#$ '") ("/bin/sh") ("\""))))
#+END_SRC
